/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-03 09:05:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.templates.costomer_002dcenter;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class qna_002dnotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/css/font/font.css\" type=\"text/css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/css/costomer-center/announcement.css\"\r\n");
      out.write("	type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<app-root>\r\n");
      out.write("	<div>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/mypage/mypage-modal.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<app-customer-center class=\"ng-star-inserted\">\r\n");
      out.write("		<section id=\"content\" class=\"withTopBanner\" style=\"padding: 11rem 0 0\">\r\n");
      out.write("			<div class=\"sub_header st3\">\r\n");
      out.write("				<div class=\"in_wrap\">\r\n");
      out.write("					<h2 class=\"dth1\" style=\"position: relative\">고객지원</h2>\r\n");
      out.write("					<h3 class=\"dth2\" style=\"padding-top: 0px\">문의하기</h3>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"in_wrap\">\r\n");
      out.write("				<div class=\"tab_sub_wrap withTopBanner\">\r\n");
      out.write("					<ul class=\"tab_nav\">\r\n");
      out.write("						<li><a routerlink=\"notice\" routerlinkactive=\"active\"\r\n");
      out.write("							href=\"/customer-center/notice\">공지사항</a></li>\r\n");
      out.write("						<li><a routerlink=\"faq\" routerlinkactive=\"active\"\r\n");
      out.write("							href=\"/customer-center/faq\">자주묻는질문</a></li>\r\n");
      out.write("						<li><a routerlink=\"qna\" routerlinkactive=\"active\"\r\n");
      out.write("							href=\"/customer-center/qna\" class=\"active\">문의하기</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<router-outlet></router-outlet>\r\n");
      out.write("				<app-customer-center-qna-detail class=\"ng-star-inserted\">\r\n");
      out.write("				<section class=\"board_wrap\">\r\n");
      out.write("					<div class=\"board_view\">\r\n");
      out.write("						<div class=\"tit_wrap di_flex\">\r\n");
      out.write("							<div>\r\n");
      out.write("								<p class=\"tit\">문의 왜 하나도 없죠?</p>\r\n");
      out.write("								<p class=\"date\">2023.04.16 17:29:29</p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<span class=\"bdg\"> 답변완료 </span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"cont_wrap\">\r\n");
      out.write("							<div id=\"editorjs_qna_detail\">\r\n");
      out.write("								<div class=\"codex-editor\">\r\n");
      out.write("									<div class=\"codex-editor__redactor\"\r\n");
      out.write("										style=\"padding-bottom: 300px;\">\r\n");
      out.write("										<div class=\"ce-block\">\r\n");
      out.write("											<div class=\"ce-block__content\">\r\n");
      out.write("												<div class=\"ce-paragraph cdx-block\" contenteditable=\"false\"\r\n");
      out.write("													data-placeholder>ㅈㄱㄴ</div>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"codex-editor-overlay\">\r\n");
      out.write("										<div class=\"codex-editor-overlay__container\">\r\n");
      out.write("											<div class=\"codex-editor-overlay__rectangle\"\r\n");
      out.write("												style=\"display: none; inset: 741px calc(100% - 938px) calc(100% - 741px) 938px;\"></div>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"tit_wrap di_flex ng-star-inserted\"\r\n");
      out.write("							style=\"border-bottom: none\">\r\n");
      out.write("							<div>\r\n");
      out.write("								<p class=\"tit\">답변</p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<span class=\"date\"> 2023.04.17 13:13:34 </span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<!---->\r\n");
      out.write("						<div class=\"cont_wrap ng-star-inserted\">\r\n");
      out.write("							<p>\r\n");
      out.write("								안녕하세요. 세상의 모든 여행 위시빈입니다. <br>본 게시판은 1:1 문의하기 형식으로 문의자와\r\n");
      out.write("								관리자에게만 보이도록 운영되고 있습니다. <br>추가 문의 사항은 언제든지 연락 주세요. 감사합니다.\r\n");
      out.write("							</p>\r\n");
      out.write("							<!---->\r\n");
      out.write("						</div>\r\n");
      out.write("						<!---->\r\n");
      out.write("						<!---->\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"list_btn di_flex\">\r\n");
      out.write("						<div class=\"ta_left\">\r\n");
      out.write("							<a class=\"btn_st0 ng-star-inserted\"> 삭제 </a>\r\n");
      out.write("							<!---->\r\n");
      out.write("							<a class=\"btn_st0 ng-star-inserted\"> 수정 </a>\r\n");
      out.write("							<!---->\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"ta_right\">\r\n");
      out.write("							<a class=\"btn_st0\" href=\"/customer-center/qna\">목록</a><a\r\n");
      out.write("								class=\"btn_st0 active\" href=\"/customer-center/qna/write\">\r\n");
      out.write("								글쓰기 </a>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</section>\r\n");
      out.write("				</app-customer-center-qna-detail>\r\n");
      out.write("				<!---->\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("		</app-customer-center>\r\n");
      out.write("\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/header-footer/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	</app-root>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

내장객체 : new로 생성자를 호출하지 않아도 was가 메모리를 할당해줄때 자동으로 할당해주는 객체
		jsp파일이 서블릿으로 변환될 때 웹 컨테이너가 자동으로 메모리에 할당해주는 객체화없이 사용가능한 객체

	request : 웹 브라우저의 요청 정보를 저장할 수 있다.
	response : 웹 브라우저의 요청에 대한 응답 정보를 저장
	out : jsp 페이지 body 에 출력할 내용 작성시 사용
	session : 하나의 웹브라우저의 정보를 유지하기 위한 세션 정보를 저장 
	pageContext : 현재 작성중인 JSP페이지에 대한 정보 저장 -> 현재 작업공간의 절대경로를 찾을 때 주로 사용
	exception : JSP페이지에 예외 발생시 사용되는 객체

GET방식과 POST방식

GET :주소에 데이터를 추가하여 전달하는 방식.
	
	보통 쿼리스트링에 포함되어 전송되므로 길이에 제한이 있으며 주소에 데이터가 보이므로 보안상 취약
	중요한 데이터 혹은 길이가 긴 데이터는 POST방식을 사용하여 요청.
	GET방식은 POST방식보다 상대적으로 빠른 전송방식

POST : 데이터를 별도로 첨부하여 전달하는 방식
	브라우저 히스토리에도 남지 않고 데이터는 쿼리스트링과는 별도로 전송된다.
	따라서 데이터의 길이에 제한도 없으며, GET방식보다 보안성이 높다.
	하지만 GET방식 보다 상대적으로 느리다.

전송할 데이터의 양이 적고 노출되도 상관없다면 GET 아니라면 POST

<form>태그
사용자가 데이터를 담아 요청을보낼 수 있는 태그
속성
action = submit실행시 폼을 전송할 서버 쪽 스크립트 파일 ->전송파일 작성 (기본값 : 현재 페이지)
method = 폼을 서버에 전송할 메소드 방식 (기본값 : GET방식)


